# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI

on:
  push:
    # Use ["main", "master"] for CI only on the default branch.
    # Use ["**"] for CI on all branches.
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (official GitHub action)
        uses: actions/checkout@v4
        with:
          # Important for versioning plugins:
          fetch-depth: 0

      - name: Install uv (official Astral action)
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.14"
          enable-cache: true
          python-version: "3.11"

      - name: Set up Python (using uv)
        run: uv python install

      - name: Install all dependencies
        run: uv sync --all-extras --dev

      - name: Run linting
        run: uv run python devtools/lint.py

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (official GitHub action)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv (official Astral action)
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.14"
          enable-cache: true
          python-version: "3.11"

      - name: Set up Python (using uv)
        run: uv python install

      - name: Install all dependencies
        run: uv sync --all-extras --dev

      - name: Run type checking
        run: uv run basedpyright

  test:
    strategy:
      matrix:
        # Update this as needed:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]

    # Linux only by default. Use ${{ matrix.os }} for other OSes.
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout (official GitHub action)
        uses: actions/checkout@v4
        with:
          # Important for versioning plugins:
          fetch-depth: 0

      - name: Install uv (official Astral action)
        uses: astral-sh/setup-uv@v5
        with:
          # Update this as needed:
          version: "0.6.14"
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Set up Python (using uv)
        run: uv python install

      - name: Install all dependencies
        run: |
          uv sync --all-extras --dev
          # Install psutil for process management
          uv pip install psutil

      - name: Run tests
        run: |
          echo "Running unit tests (excluding integration tests)..."
          uv run pytest -k "not integration"

  docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout (official GitHub action)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv (official Astral action)
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.14"
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Set up Python (using uv)
        run: uv python install

      - name: Install all dependencies
        run: |
          uv sync --all-extras --dev
          # Ensure mkdocs and its dependencies are installed
          uv pip install mkdocs mkdocs-material pymdown-extensions

      - name: Check MkDocs installation
        run: |
          uv pip list | grep mkdocs
          uv run mkdocs --version

      - name: Verify mkdocs.yml
        run: |
          echo "Verifying mkdocs.yml file..."
          cat mkdocs.yml
          echo "Checking for any syntax errors in mkdocs.yml..."
          python -c "import yaml; yaml.safe_load(open('mkdocs.yml'))"

      - name: Build documentation
        run: |
          echo "Building documentation with MkDocs..."
          uv run mkdocs build --verbose
