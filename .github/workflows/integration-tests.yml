name: Integration Tests

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]
  # Allow manual triggers
  workflow_dispatch:

permissions:
  contents: read

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.14"
          enable-cache: true
          python-version: "3.11"

      - name: Set up Python
        run: uv python install

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev
          # Install psutil for process management
          uv pip install psutil

      - name: Set up Docker Compose
        run: |
          # Check Docker and Docker Compose versions
          docker --version
          docker-compose --version

          # Pull and build images
          docker-compose pull
          docker-compose build
          docker-compose up -d

      - name: Wait for services to start
        run: |
          # More time to allow services to initialize properly
          echo "Waiting for services to start up..."
          sleep 30

          # Show the status of services
          echo "Docker services status:"
          docker-compose ps

          # Check if API service is ready
          echo "Checking API health..."
          curl -v http://localhost:8000/health/ || echo "API health check failed (expected during startup)"

          # Check if MinIO service is ready
          echo "Checking MinIO service..."
          curl -v http://localhost:9000/minio/health/ready || echo "MinIO health check failed (expected during startup)"

      - name: Run integration tests
        run: |
          echo "Running integration tests..."
          INTEGRATION_TESTS=true START_DOCKER_SERVICES=false uv run pytest tests/integration -v
        env:
          CI: true

      - name: Dump docker logs on failure
        if: failure()
        run: |
          echo "Docker service logs:"
          docker-compose logs

          echo "API service logs:"
          docker-compose logs api

          echo "MinIO service logs:"
          docker-compose logs minio

      - name: Clean up
        run: docker-compose down
        if: always()  # Always run cleanup, even if tests fail
